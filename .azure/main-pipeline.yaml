trigger:
  - main

variables:
  - name: buildDate
    value: $[format('{0:yyyy}{0:MM}{0:dd}', pipeline.startTime)]

pool:
  name: default
  demands: agent.os -equals Linux

stages:
  - stage: Build
    displayName: Build artifacts for release
    jobs:
      - template: templates/build-pipeline.yaml
        parameters:
          buildDate: $(buildDate)

  - stage: DeployStaging
    displayName: Deploy to staging environment
    condition: succeeded()
    dependsOn: Build
    jobs:
      - job: waitForValidation
        displayName: Wait for validation
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 1440
            inputs:
              notifyUsers: |
                sajal.shres@gmail.com
                gdrive.samar@gmail.com
              instructions: 'Please validate build and resume'
              onTimeout: 'reject'
      - template: templates/deployment-pipeline.yaml
        parameters:
          environment: staging

  - stage: DeployProduction
    displayName: Deploy to production environment
    condition: succeeded()
    dependsOn: Build
    jobs:
      - job: waitForValidation
        displayName: Wait for validation
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 1440
            inputs:
              notifyUsers: |
                sajal.shres@gmail.com
                gdrive.samar@gmail.com
              instructions: 'Please validate build and resume'
              onTimeout: 'reject'
      - template: templates/deployment-pipeline.yaml
        parameters:
          environment: production
